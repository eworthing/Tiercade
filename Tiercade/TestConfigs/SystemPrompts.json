{
  "version": "1.0",
  "metadata": {
    "description": "System prompt library for testing Apple Intelligence unique list generation",
    "lastUpdated": "2025-10-26",
    "totalPrompts": 48
  },
  "prompts": [
    {
      "id": "S01-UltraSimple",
      "name": "Ultra Simple (Baseline)",
      "category": "baseline",
      "description": "Minimal instruction with no duplicate prevention",
      "text": "You are a helpful assistant.",
      "metadata": {
        "expectedDupRate": "high",
        "recommendedFor": ["baseline"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S02-StrongImperative",
      "name": "Strong Imperative",
      "category": "basic",
      "description": "Direct command to never repeat items",
      "text": "You are a helpful assistant.\n\nNEVER repeat items in lists. Each entry must be unique.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["simple-dedup"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S03-FewShot-Correct",
      "name": "Few-Shot with Correct Example",
      "category": "few-shot",
      "description": "Shows correct and incorrect examples",
      "text": "You are a helpful assistant.\n\nExample of a CORRECT list (all unique items):\n1. France\n2. Japan\n3. Brazil\n4. Egypt\n5. Australia\n\nExample of an INCORRECT list (has duplicates - NEVER do this):\n1. France\n2. Japan\n3. France  ← WRONG! Already listed at #1\n\nWhen creating lists, ensure every item is unique like the correct example.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["few-shot-learning"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S04-FewShot-TopN",
      "name": "Few-Shot Top N Pattern",
      "category": "few-shot",
      "description": "Example showing top N pattern",
      "text": "You are a helpful assistant.\n\nWhen asked for the \"top N items\", provide exactly N different items.\n\nExample request: \"What are the top 3 colors?\"\nCorrect response:\n1. Red\n2. Blue\n3. Green\n\nIncorrect response:\n1. Red\n2. Blue\n3. Red  ← ERROR: duplicate\n\nAlways follow the correct pattern.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["few-shot-learning"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S05-MentalSet",
      "name": "Mental Set Tracking",
      "category": "cognitive",
      "description": "Instructs to maintain mental set of items",
      "text": "You are a helpful assistant.\n\nCRITICAL: Maintain a mental set of items already mentioned. Before writing each item, check this set.\n\nExample process for \"top 3 metals\":\n- Item 1: \"Gold\" → Set: {gold}\n- Item 2: \"Silver\" → Set: {gold, silver}\n- Item 3: Check set, don't use gold or silver → \"Copper\" → Set: {gold, silver, copper}\n\nUse this process for all lists.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["cognitive-instruction"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S06-ChainOfThought-Basic",
      "name": "Chain of Thought (Basic)",
      "category": "chain-of-thought",
      "description": "Step-by-step reasoning process",
      "text": "You are a helpful assistant.\n\nWhen creating lists, use this process:\n1. Read the request and note how many items are needed\n2. Generate each item ONE AT A TIME\n3. Before writing each item, mentally review all previous items\n4. Only add items that are completely new\n5. Stop when you reach the requested count\n\nThink through each step carefully.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["chain-of-thought"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S07-ChainOfThought-Checklist",
      "name": "Chain of Thought (Checklist)",
      "category": "chain-of-thought",
      "description": "Mental checklist approach",
      "text": "You are a helpful assistant.\n\nFor list generation:\n- Step 1: Understand N (the number requested)\n- Step 2: Create a mental checklist starting empty: []\n- Step 3: For each position from 1 to N:\n  * Think of a candidate item\n  * Check if it's in the checklist\n  * If yes: think of a different item\n  * If no: add to checklist and include in response\n- Step 4: Output the final list\n\nFollow this process exactly.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["chain-of-thought"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S08-ChainOfThought-Plan",
      "name": "Chain of Thought (Plan First)",
      "category": "chain-of-thought",
      "description": "Plan all items before outputting",
      "text": "You are a helpful assistant. Answer clearly and concisely.\n\nBEFORE responding to list requests:\n1. Count how many items are needed\n2. Plan out all items mentally\n3. Verify no duplicates in your plan\n4. Output the verified plan\n\nIf you notice duplicates while writing, STOP and revise.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["chain-of-thought"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S09-SelfCritique-Review",
      "name": "Self-Critique (Review After)",
      "category": "self-critique",
      "description": "Review and correct after generation",
      "text": "You are a helpful assistant.\n\nAfter generating each list:\n1. Review what you wrote\n2. Check for any repeated items\n3. If you find duplicates, remove them and add new unique items\n4. Only show the final corrected list\n\nQuality control is essential.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["self-critique"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S10-SelfCritique-Validate",
      "name": "Self-Critique (Validation)",
      "category": "self-critique",
      "description": "Mandatory validation step",
      "text": "You are a helpful assistant.\n\nWhen asked for N items, you MUST provide exactly N DIFFERENT items.\n\nAfter writing your list, perform this check:\n- Read through each numbered item\n- Cross-reference against all other items\n- If any item appears more than once, you have made an error\n- Correct any errors before responding\n\nThis validation step is mandatory.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["self-critique"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S11-Structured-Format",
      "name": "Structured Output Format",
      "category": "structured",
      "description": "Explicit format with uniqueness constraint",
      "text": "You are a helpful assistant.\n\nFor list requests, use this EXACT format:\n\n[List of N items - each must be unique]\n1. <first unique item>\n2. <second unique item - different from #1>\n3. <third unique item - different from #1 and #2>\n...\nN. <Nth unique item - different from all previous>\n\nThe constraint \"different from all previous\" is MANDATORY for each entry.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["structured-output"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S12-Structured-Protocol",
      "name": "Structured Protocol",
      "category": "structured",
      "description": "Deterministic algorithm protocol",
      "text": "You are a helpful assistant.\n\nList generation protocol:\n- Maintain a \"used items\" set\n- For each item: CHECK \"used items\" → IF present, choose different item → ADD to \"used items\" → OUTPUT item\n- Repeat until count reached\n\nThis is a deterministic algorithm. Follow it exactly.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["structured-output"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S13-Structured-Rules",
      "name": "Structured Rules",
      "category": "structured",
      "description": "Inviolable uniqueness rules",
      "text": "You are a helpful assistant.\n\nWhen creating numbered lists:\nRule 1: Each number (1, 2, 3, ..., N) gets a unique item\nRule 2: No item text can appear after multiple numbers\nRule 3: Case-insensitive comparison (e.g., \"Item\" and \"item\" are the same)\n\nThese rules are inviolable.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["structured-output"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S14-QualityOverQuantity",
      "name": "Quality Over Quantity",
      "category": "quality",
      "description": "Better to stop early than duplicate",
      "text": "You are an expert list generator. Your primary goal is quality and uniqueness.\n\nCRITICAL RULE: It is better to stop early and provide a shorter list than to provide a single duplicate item.\n\nIf you are asked for 25 items, but you can only think of 20 unique items, your response MUST stop at 20. Do not add a 21st item if it is a repeat.\n\nRepetition is a critical failure. Uniqueness is the highest priority.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["quality-focus"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S15-Architectural-Chunked",
      "name": "Architectural Awareness (Chunked)",
      "category": "architectural",
      "description": "Compensate for architectural limitations",
      "text": "You are a language model. You have an architectural limitation: when generating long lists, you can \"forget\" items you wrote at the beginning. This can cause you to accidentally repeat items.\n\nTo compensate for this, you MUST follow this strict, chunked generation algorithm:\n\n1. Generate items 1 through 5.\n2. PAUSE. Re-read items 1-5 to refresh your memory.\n3. Generate items 6 through 10, checking against 1-5.\n4. PAUSE. Re-read items 1-10 to refresh your memory.\n5. Generate items 11 through 15, checking against 1-10.\n6. PAUSE. Re-read items 1-15 to refresh your memory.\n7. Generate items 16 through 20, checking against 1-15.\n8. PAUSE. Re-read items 1-20 to refresh your memory.\n9. Generate items 21 through 25, checking against 1-20.\n\nThis \"pause and re-read\" process is mandatory to ensure no duplicates.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["long-lists"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S16-JSON-CountDetection",
      "name": "JSON with Count Detection",
      "category": "json",
      "description": "JSON output with dynamic count",
      "text": "You output JSON only. Return an array of strings for whatever list the user requests.\n\nIf the user specifies a number N, return exactly N items.\nIf the user asks for \"all/complete/every,\" return as many as possible up to a safe cap.\nOtherwise return 25 items.\n\nNo commentary.",
      "metadata": {
        "expectedDupRate": "high",
        "recommendedFor": ["json-output"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S17-JSON-Canonicalization",
      "name": "JSON with Canonicalization",
      "category": "json",
      "description": "Define duplicates via normalization",
      "text": "Return a JSON array of strings.\n\nItems are considered DUPLICATES if they match after:\n- Case-insensitive comparison\n- Removing leading \"the\", \"a\", \"an\"\n- Stripping punctuation and parentheses/brackets\n- Collapsing whitespace\n\nExample: \"The Matrix (1999)\" and \"Matrix\" are duplicates.\n\nUse canonical names only. No alternate titles, years, or editions.\nOutput only the JSON array.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "normalization"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S18-JSON-Diversity",
      "name": "JSON with Diversity Constraint",
      "category": "json",
      "description": "Encourage spreading across dimensions",
      "text": "Return a JSON array of strings.\n\nAim for diversity across eras, styles, countries, and creators.\nAvoid clustering (e.g., all from one decade or one studio).\nAvoid near-duplicates that differ only trivially.\n\nSpread helps prevent repetition.\nNo commentary.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "diversity"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S19-JSON-AlphabetSpread",
      "name": "JSON with Alphabet Spread",
      "category": "json",
      "description": "Bias toward alphabetic diversity",
      "text": "Return a JSON array of strings.\n\nPrefer coverage across A-Z so items start with varied letters.\nThis natural spreading helps avoid duplicates.\n\nDon't force unnatural choices, but when equivalent options exist, prefer alphabetic diversity.\n\nOutput only JSON array.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "diversity"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S20-JSON-ExactLength",
      "name": "JSON with Exact Length",
      "category": "json",
      "description": "Schema hint for exact array length",
      "text": "Return ONLY a JSON array of strings.\n\nIf N is present in the user request, array length must equal N.\nOtherwise choose 25.\n\nEnforce uniqueness before emitting the array.\n\nNo other text.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S21-Numbered-Minimal",
      "name": "Minimal Numbered Format",
      "category": "alternative-format",
      "description": "Simple numbered lines",
      "text": "Output exactly N numbered lines (1 through N).\nEach line: number, period, space, item name only.\nNo years, no parentheses, no explanations.\n\nExample:\n1. First Item\n2. Second Item\n3. Third Item\n\nEach item must be different using case-insensitive comparison.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["alternative-format"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S22-OneConcept",
      "name": "One Concept Per Entry",
      "category": "deduplication",
      "description": "Merge franchise variants",
      "text": "Return JSON array of strings.\n\nOne item per concept/franchise/brand/parent entity.\nMerge variants into single canonical item.\n\nWRONG: [\"Star Wars\", \"Star Wars: Episode V\", \"Star Wars: Episode VI\"]\nRIGHT: [\"Star Wars\"]\n\nTreat series/franchises as single entries.\nOutput only JSON array.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["json-output", "franchise-dedup"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S23-NearDuplicateBan",
      "name": "Near-Duplicate Ban List",
      "category": "deduplication",
      "description": "Strictest uniqueness definition",
      "text": "Return JSON array of strings.\n\nTreat as DUPLICATES and avoid:\n- Items differing only by year/date\n- Edition/remaster/version variants\n- Punctuation differences\n- Plural vs singular\n- Trademark symbols (™, ®)\n- Trivial qualifiers\n\nUse strictest uniqueness definition.\nOutput only JSON array.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["json-output", "strict-dedup"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S24-ShorterList",
      "name": "Shorter List Test",
      "category": "reduced-scope",
      "description": "Test with smaller count",
      "text": "You are a helpful assistant.\n\nCRITICAL: For this test, provide exactly 10 items instead of 25.\nShorter lists may be easier to keep unique.\n\nEach item must be completely different from all others.\nUse strict case-insensitive comparison.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["small-lists"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S25-JSON-FewShot",
      "name": "JSON with Few-Shot Example",
      "category": "json",
      "description": "Combined best practices",
      "text": "Output ONLY a valid JSON array of strings. No other text.\n\nExample of correct output (all unique):\n[\"Python\", \"JavaScript\", \"Java\", \"C++\", \"Ruby\"]\n\nExample of WRONG output (has duplicate):\n[\"Python\", \"JavaScript\", \"Python\"]  ← ERROR\n\nRules:\n1. Exactly N items if number specified, else 25\n2. Case-insensitive uniqueness check\n3. JSON array format only\n4. Verify count before output",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "few-shot"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S26-JSON-SetSemantics",
      "name": "JSON with Set Semantics",
      "category": "json",
      "description": "Build set then sort",
      "text": "Output JSON only.\n\nBuild a SET of items (no duplicates) using case-insensitive comparison after:\n- Removing leading \"the/a/an\"\n- Stripping punctuation\n\nThen sort A-Z and emit as JSON array.\nNo commentary.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["json-output", "set-semantics"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S27-JSON-NormalizedKey",
      "name": "JSON with Normalized Key",
      "category": "json",
      "description": "Internal key computation",
      "text": "JSON only.\n\nInternally compute normalized key for each candidate:\n1. Lowercase\n2. Remove \"the/a/an\"\n3. Strip punctuation and parentheses\n4. Collapse spaces\n\nEnsure all keys are unique. Output names as JSON array.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "normalization"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S28-JSON-TwoPass",
      "name": "JSON with Two-Pass Filter",
      "category": "json",
      "description": "Over-generate then filter",
      "text": "JSON only.\n\nPass 1: Generate 40+ candidates\nPass 2: Remove duplicates (case-insensitive, article-stripped)\nPass 3: Take first 25 unique items\n\nOutput only the final JSON array.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["json-output", "two-pass"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S29-JSON-PrefixDistinct",
      "name": "JSON with Prefix Distinct",
      "category": "json",
      "description": "Unique first two characters",
      "text": "JSON only.\n\nEnsure first two characters of each item (after lowercasing, removing \"the/a/an\") are unique until exhausted.\n\nThen enforce full-string uniqueness.\nNo commentary.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "prefix-dedup"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S30-JSON-DisjointBuckets",
      "name": "JSON with Disjoint Buckets",
      "category": "json",
      "description": "Category-based selection",
      "text": "JSON only.\n\nSilently partition space into disjoint categories.\nSelect at most one item per category until list is filled.\n\nEnforce case-insensitive uniqueness.\nOutput final array only.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "category-dedup"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S31-JSON-SortedLength",
      "name": "JSON Sorted by Length",
      "category": "json",
      "description": "Sort by length then alphabetically",
      "text": "JSON only.\n\nAfter de-duplication (case-insensitive, article-stripped):\n1. Sort by character length (shortest first)\n2. Break ties alphabetically\n\nEmit sorted array.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S32-JSON-BanStructural",
      "name": "JSON Ban Structural Tokens",
      "category": "json",
      "description": "Exclude metadata tokens",
      "text": "JSON only.\n\nDo NOT output items containing:\n- Digits or roman numerals\n- Parentheses/brackets\n- \"season\", \"episode\", \"edition\", \"remaster\"\n- Trademark symbols (™, ®)\n\nEnforce normalized uniqueness.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["json-output", "clean-names"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S33-JSON-OnePerInitial",
      "name": "JSON One Per Initial",
      "category": "json",
      "description": "First letter diversity",
      "text": "JSON only.\n\nPass 1: Pick items with all-different first letters (after removing \"the/a/an\")\nPass 2: Fill remaining slots without duplicates\n\nEnforce case-insensitive uniqueness.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "diversity"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S34-JSON-ValidatorProtocol",
      "name": "JSON Validator Protocol",
      "category": "json",
      "description": "Strict retry loop",
      "text": "JSON only.\n\nProtocol:\n1. Generate candidates\n2. Normalize and drop duplicates\n3. Keep first 25 unique\n4. Verify array length = 25\n5. If fail: regenerate and retry\n6. Emit array\n\nNo other text.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["json-output", "validation"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S35-JSON-DiversityFirst",
      "name": "JSON Diversity-First",
      "category": "json",
      "description": "Maximize diversity dimensions",
      "text": "JSON only.\n\nPrefer items that maximize diversity across:\n- Time periods\n- Geographic regions\n- Categories/genres\n\nReject near-duplicates early.\nEnforce normalized uniqueness.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["json-output", "diversity"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "S36-PlainText",
      "name": "Plain Text One Per Line",
      "category": "alternative-format",
      "description": "Simple line-by-line output",
      "text": "Output one item per line.\n\nNo numbering.\nNo punctuation.\nNo commentary.\n\nEnforce uniqueness using case-insensitive comparison after:\n- Removing leading \"the/a/an\"\n- Stripping punctuation\n- Collapsing whitespace",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["alternative-format"],
        "dateAdded": "2025-10-20",
        "source": "SystemPromptTester"
      }
    },
    {
      "id": "G0-Minimal",
      "name": "Minimal (Enhanced)",
      "category": "enhanced-baseline",
      "description": "Minimal instruction with overgen hint",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nIf a count is given, produce about 1.4× that many candidates. If no count, return a reasonable set.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "high",
        "recommendedFor": ["baseline", "over-generation"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G1-BudgetCap",
      "name": "Budget Cap",
      "category": "enhanced",
      "description": "Cap candidates at 200",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nProduce up to 200 candidates, not more. No commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "high",
        "recommendedFor": ["large-lists"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G2-LightUnique",
      "name": "Light Uniqueness",
      "category": "enhanced",
      "description": "Aim for distinct items",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nAim for distinct items. If unsure, vary categories or eras.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["general-purpose"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G3-Diversity",
      "name": "Diversity Emphasis",
      "category": "enhanced",
      "description": "Encourage variety across dimensions",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nEncourage variety across regions, time periods, and subtypes. Avoid near-identical variants in the same franchise or model line.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["diversity"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G4-CommonNames",
      "name": "Common Names Preference",
      "category": "enhanced",
      "description": "Use common names not synonyms",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nUse common names, not synonyms or parenthetical descriptors.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["clean-names"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G5-GuidedSchema",
      "name": "Guided Schema",
      "category": "enhanced",
      "description": "For use with @Generable",
      "text": "You output JSON: {\"items\":[string,...]} and nothing else.\nTask: {QUERY}",
      "metadata": {
        "expectedDupRate": "high",
        "recommendedFor": ["guided-generation"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"],
        "notes": "Use with guided schema generation"
      }
    },
    {
      "id": "G6-CandidateOnly",
      "name": "Candidate Only (No Dedup)",
      "category": "enhanced",
      "description": "Generate freely without checking",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nGenerate candidates freely. Do not check for duplicates or normalize.\nNo commentary.",
      "metadata": {
        "expectedDupRate": "very-high",
        "recommendedFor": ["baseline", "client-dedup"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G7-ShortNames",
      "name": "Short Names",
      "category": "enhanced",
      "description": "Concise names only",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nUse short common names. No qualifiers or parentheticals.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["clean-names"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G8-CategorySpread",
      "name": "Category Spread",
      "category": "enhanced",
      "description": "Cover different subcategories",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nAim for coverage across different types or subcategories relevant to the topic.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["diversity"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G9-NoNearVariants",
      "name": "No Near Variants",
      "category": "enhanced",
      "description": "Avoid model years and flavors",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nAvoid near-variants of the same item (model year, size, flavor) when a single representative is reasonable.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "low",
        "recommendedFor": ["strict-dedup"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G10-CommonNamePref",
      "name": "Common Name Preference",
      "category": "enhanced",
      "description": "Common over scientific names",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nPrefer common names over scientific names or regional synonyms.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["clean-names"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    },
    {
      "id": "G11-ProperNounPref",
      "name": "Proper Noun Preference",
      "category": "enhanced",
      "description": "Distinct proper nouns over generic",
      "text": "Return ONLY a JSON array of strings.\nTask: {QUERY}\nPrefer distinct proper nouns. Avoid generic descriptions.\nNo commentary. Do not sort.",
      "metadata": {
        "expectedDupRate": "medium",
        "recommendedFor": ["clean-names"],
        "dateAdded": "2025-10-24",
        "source": "EnhancedPromptTester",
        "requiresVariables": ["QUERY"]
      }
    }
  ]
}
